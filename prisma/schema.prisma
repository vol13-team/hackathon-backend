
  generator client {
    provider = "prisma-client-js"
  }

  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }
model User {
  user_id String @id @default(uuid())
  email   String @unique
  user_name   String
  created_at DateTime  @default(now())
  update_at  DateTime  @updatedAt

  issue      Issue[]
  answer     Answer[]
}

model Issue {
  issue_id          String @id @default(uuid())
  issue_name        String
  issue_detail      String
  visibility       Boolean
  option1          String
  option2          String
  option3          String
  option4          String
  correct_option    String
  post_user         User       @relation(fields: [post_user_id], references: [user_id],onDelete: Cascade, onUpdate: Cascade)
  post_user_id       String
  explanation      String?
  created_at       DateTime  @default(now())
  update_at        DateTime  @updatedAt
  article          Article     @relation(fields: [article_id], references: [article_id],onDelete: Cascade, onUpdate: Cascade) // 修正箇所
  article_id        String
  answer           Answer[]
}

model Article {
  article_id  String @id @default(uuid())
  article_title  String
  article_link  String
  article_user_name  String
  issue       Issue[]
}

model Answer {
  answer_id      String @id @default(uuid())
  decision      Boolean
  issue         Issue    @relation(fields: [issue_id], references: [issue_id],onDelete: Cascade, onUpdate: Cascade)
  issue_id       String
  answer_user     User     @relation(fields: [answer_user_id], references: [user_id],onDelete: Cascade, onUpdate: Cascade)
  answer_user_id   String
  select_option_id String
}